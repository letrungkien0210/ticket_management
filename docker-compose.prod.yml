version: '3.8'

services:
  # MongoDB Database - Production
  mongodb:
    image: mongo:7.0
    container_name: ticket-management-mongodb-prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-securepassword123}
      MONGO_INITDB_DATABASE: ticket_management
    volumes:
      - mongodb_prod_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - prod-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend API - Production
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
      target: production
    container_name: ticket-management-backend-prod
    restart: always
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-securepassword123}@mongodb:27017/ticket_management?authSource=admin
      FRONTEND_URL: ${FRONTEND_URL:-https://your-domain.com}
      JWT_SECRET: ${JWT_SECRET:-please-change-this-in-production}
      JWT_EXPIRES_IN: 7d
    depends_on:
      - mongodb
    networks:
      - prod-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend Application - Production
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      target: production
    container_name: ticket-management-frontend-prod
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - prod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ticket-management-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
    networks:
      - prod-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongodb_prod_data:
    driver: local

networks:
  prod-network:
    driver: bridge 